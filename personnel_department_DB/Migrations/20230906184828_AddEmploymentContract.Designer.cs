// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using personnel_department_DB;

#nullable disable

namespace personnel_department_DB.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230906184828_AddEmploymentContract")]
    partial class AddEmploymentContract
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("personnel_department_DB.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0c3d142-e4a3-4348-b3a4-2949ae51dfdd"),
                            Name = "ООО Рубик экспресс"
                        });
                });

            modelBuilder.Entity("personnel_department_DB.Models.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AcceptanceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Allowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfPreparation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0eed40fd-d441-466a-b203-955d9b4ad991"),
                            AcceptanceDate = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Allowance = 2000m,
                            CompanyId = new Guid("f0c3d142-e4a3-4348-b3a4-2949ae51dfdd"),
                            DateOfPreparation = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("44763552-36f6-493e-92d0-3f2eaafddd19"),
                            Salary = 10000m
                        });
                });

            modelBuilder.Entity("personnel_department_DB.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FamilyComposition")
                        .HasColumnType("bigint");

                    b.Property<long>("INH")
                        .HasColumnType("bigint");

                    b.Property<long>("PassportId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfResidence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("WorkExperience")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employess");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44763552-36f6-493e-92d0-3f2eaafddd19"),
                            DateOfBirth = new DateTime(2003, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FIO = "Василий Петрович Вознесенский",
                            FamilyComposition = 2L,
                            INH = 1234567890L,
                            PassportId = 11148L,
                            PhoneNumber = "+7 919 922 32 23",
                            PlaceOfResidence = "Пр.Мира 1",
                            PositionId = new Guid("324f1670-de29-496f-adad-947d2dde65cc"),
                            WorkExperience = 12L
                        });
                });

            modelBuilder.Entity("personnel_department_DB.Models.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("324f1670-de29-496f-adad-947d2dde65cc"),
                            Name = "Директор"
                        },
                        new
                        {
                            Id = new Guid("6c68eec0-33aa-4394-80f3-48795e0d20c1"),
                            Name = "Бухгалтер"
                        });
                });

            modelBuilder.Entity("personnel_department_DB.Models.WorkingTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActualDaysWorked")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTrip")
                        .HasColumnType("int");

                    b.Property<int>("DaysOff")
                        .HasColumnType("int");

                    b.Property<int>("DaysWorked")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SickLeave")
                        .HasColumnType("int");

                    b.Property<int>("Vacation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("WorkingTime");

                    b.HasData(
                        new
                        {
                            Id = new Guid("030e7e31-eee7-4892-a49c-1f6059943c91"),
                            ActualDaysWorked = 20,
                            BusinessTrip = 4,
                            DaysOff = 4,
                            DaysWorked = 31,
                            EmployeeId = new Guid("44763552-36f6-493e-92d0-3f2eaafddd19"),
                            SickLeave = 3,
                            Vacation = 0
                        });
                });

            modelBuilder.Entity("personnel_department_DB.Models.Contract", b =>
                {
                    b.HasOne("personnel_department_DB.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("personnel_department_DB.Models.Employee", "Employee")
                        .WithOne("Contract")
                        .HasForeignKey("personnel_department_DB.Models.Contract", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("personnel_department_DB.Models.Employee", b =>
                {
                    b.HasOne("personnel_department_DB.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("personnel_department_DB.Models.WorkingTime", b =>
                {
                    b.HasOne("personnel_department_DB.Models.Employee", "Employee")
                        .WithOne("WorkingTimeTable")
                        .HasForeignKey("personnel_department_DB.Models.WorkingTime", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("personnel_department_DB.Models.Employee", b =>
                {
                    b.Navigation("Contract")
                        .IsRequired();

                    b.Navigation("WorkingTimeTable")
                        .IsRequired();
                });

            modelBuilder.Entity("personnel_department_DB.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
